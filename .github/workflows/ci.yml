name: Rails CI with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DATABASE_URL: mysql2://root:password@db:3306/runteq_graduation_test
      SELENIUM_DRIVER_URL: http://chrome:4444/wd/hub

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Configure database.yml
        run: cp config/database.yml.ci config/database.yml

      - name: Increase Swap Space
        run: |
          sudo fallocate -l 16G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d --build

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            docker-compose exec db mysqladmin ping -h db --silent && break
            echo "Waiting for MySQL to be ready..."
            sleep 1
          done

      - name: Check Web Logs
        run: docker-compose logs web

      - name: Prepare Database
        run: |
          docker-compose exec web bash -c "bundle exec rails db:create db:schema:load"

      - name: Limit Test Threads
        run: echo "RAILS_MAX_THREADS=1" >> .env.test

      - name: Check Container Status
        run: docker-compose ps

      - name: Check MySQL Status
        run: |
          docker-compose exec db mysqladmin status -u root --password=password
      
      - name: Run System email_changes Tests
        run: |
          docker-compose exec web bash -c "RAILS_ENV=test bundle exec rspec spec/system/email_changes --format documentation --backtrace" | tee logs/email_changes.log || true
      
      - name: Restart Services
        run: |
          docker-compose down
          docker-compose up -d
      
      - name: Wait for All Services to be Ready
        run: |
          for i in {1..30}; do
            docker-compose exec db mysqladmin ping -h db --silent && echo "DB is ready" && break
            echo "Waiting for DB..."
            sleep 2
          done
          for i in {1..30}; do
            docker-compose exec web curl -s http://localhost:3000 && echo "Web is ready" && break
            echo "Waiting for Web..."
            sleep 2
          done
      
      - name: Run System login Tests
        run: |
          docker-compose exec web bash -c "RAILS_ENV=test bundle exec rspec spec/system/login --format documentation --backtrace" | tee logs/login.log || true
      
      - name: Show Docker Logs
        run: |
          echo "=== Docker Logs ==="
          docker-compose logs
      
      - name: Check Container Status
        run: docker-compose ps

      - name: Show MySQL Logs
        run: |
          docker-compose logs db

      - name: Run System partner_shares Tests
        run: |
          docker-compose exec web bash -c "RAILS_ENV=test bundle exec rspec spec/system/partner_shares --format documentation --backtrace" | tee logs/partner_shares.log || true
      
      - name: Run Other Tests
        run: |
          docker-compose exec web bash -c "RAILS_ENV=test bundle exec rspec --tag ~type:system --format documentation" | tee rspec.log || true

      - name: Run Rubocop
        run: |
          docker-compose exec web bash -c "bundle exec rubocop"

      - name: Tear down Docker Compose
        if: always()
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml down